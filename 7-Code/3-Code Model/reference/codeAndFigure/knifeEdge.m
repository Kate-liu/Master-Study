function [ U2 ] = knifeEdge( U1, X, Y, p )
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
% Knife Edge
% 
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% input  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% U1: 刀口之前的电场
% X: x 方向数据
% Y: y 方向数据
% p: 刀口与光轴之间的垂直距离
% 
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% output  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% U2: 通过刀口之后的电场
% 
% %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% warning  %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% zeros(size(num)) 表示获得一个与num一样维度的全0数组
% find(X < p) 表示找到X数组中小于给定刀口位置的数据
% 
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

    zeroU1 = zeros(size(Y));
    zeroU1(find(X < p)) = 1;
   
    U2 = U1 .* zeroU1;

end


